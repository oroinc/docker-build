include:
  - path: 
    - compose-session-storage-${ORO_SESSION_STORAGE_TYPE-redis}.yaml

x-depends_on: &default-depends_on
  "db":
    condition: service_healthy
  "search-engine":
    condition: service_healthy
  "mq":
    condition: service_healthy
  "session-storage":
    condition: service_healthy
  "file-storage":
    condition: service_healthy
  "mail":
    condition: service_started
  "gotenberg":
    condition: service_healthy
  


services:

  php-fpm-app:
    depends_on:
      <<: *default-depends_on

  install:
    depends_on:
      <<: *default-depends_on

  install-test:
    depends_on:
      <<: *default-depends_on

  functional:
    depends_on:
      <<: *default-depends_on

  behat-init:
    depends_on:
      <<: *default-depends_on

  behat:
    depends_on:
      <<: *default-depends_on

  restore:
    depends_on:
      <<: *default-depends_on

  restore-test:
    depends_on:
      <<: *default-depends_on

  update:
    depends_on:
      <<: *default-depends_on

  update-test:
    depends_on:
      <<: *default-depends_on

  warmup-cache:
    depends_on:
      <<: *default-depends_on

  backup:
    build:
      target: backup
      extra_hosts:
        - file-storage:${FILE_STORAGE_IP-host.docker.internal}
    depends_on:
      "file-storage":
        condition: service_started

  backup-test:
    build:
      target: backup
      extra_hosts:
        - file-storage:${FILE_STORAGE_IP-host.docker.internal}
    depends_on:
      "file-storage":
        condition: service_started


  search-engine:
    image: ${ORO_PROJECT}elasticsearch:${ORO_ES_VER}
    command: bin/elasticsearch -Eingest.geoip.downloader.enabled=false
    environment:
      discovery.type: "single-node"
      cluster.name: docker-cluster
      bootstrap.memory_lock: "true"
      network.host: 0.0.0.0
      path.repo: "/tmp"
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      xpack.security.enabled: false
      xpack.security.http.ssl.enabled: false
      xpack.security.transport.ssl.enabled: false
      cluster.routing.allocation.disk.threshold_enabled: false
    labels:
      com.symfony.server.service-prefix: ORO_SEARCH
    healthcheck:
      test: "curl -sfL 'http://127.0.0.1:9200/_cluster/health?pretty&wait_for_status=yellow&timeout=5s'"
      start_period: 120s
    restart: unless-stopped

  mq:
    image: ${ORO_PROJECT}rabbitmq:${ORO_RMQ_VER}
    user: rabbitmq
    labels:
      com.symfony.server.service-prefix: ORO_MQ
    volumes:
      - ./rabbitmq/load_definitions.conf:/etc/rabbitmq/conf.d/load_definitions.conf
      - ./rabbitmq/rmq.definitions.json:/etc/rabbitmq/rmq.definitions.json
    healthcheck:
      test: rabbitmq-diagnostics -q status
      start_period: 20s
    restart: unless-stopped

  file-storage:
    image: ${ORO_PROJECT}percona-server-mongodb:${ORO_MONGO_VER}
    env_file: .env-ce-no
    tmpfs:
      - /data
    volumes:
      - ./mongo/mongo.definitions.sh:/docker-entrypoint-initdb.d/mongo.definitions.sh
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh admin -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --quiet | grep 1
      interval: 15s
      timeout: 30s
      start_period: 60s
    restart: unless-stopped

  gotenberg:
    image: ${ORO_PROJECT}gotenberg:${ORO_GOTENBERG_VER}
    healthcheck:
      test: ["CMD", "curl", "-sfL", "http://localhost:3000/health"]
    restart: unless-stopped
