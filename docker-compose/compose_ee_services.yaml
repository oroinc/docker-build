x-depends_on_ee_services: &default-depends_on_ee_services
  "search-engine":
    condition: service_healthy
  "mq":
    condition: service_healthy
  "session-storage":
    condition: service_healthy

services:
  application:
    depends_on:
      "operator":
        condition: service_started

  web:
    volumes:
      - cache:/var/www/oro/var/cache
      - public_storage:/var/www/oro/public/media
      - private_storage:/var/www/oro/var/data
  
  php-fpm-app:
    volumes:
      - cache:/var/www/oro/var/cache
      - multihost_operation_folder:$ORO_MULTIHOST_OPERATION_FOLDER
      - public_storage:/var/www/oro/public/media
      - private_storage:/var/www/oro/var/data
    depends_on:
      <<: *default-depends_on_ee_services

  ws:
    volumes:
      - cache:/var/www/oro/var/cache
      - public_storage:/var/www/oro/public/media
      - private_storage:/var/www/oro/var/data

  consumer:
    volumes:
      - cache:/var/www/oro/var/cache
      - public_storage:/var/www/oro/public/media
      - private_storage:/var/www/oro/var/data

  cron:
    volumes:
      - cache:/var/www/oro/var/cache
      - multihost_operation_folder:$ORO_MULTIHOST_OPERATION_FOLDER
      - public_storage:/var/www/oro/public/media
      - private_storage:/var/www/oro/var/data

  operator:
    image: $ORO_IMAGE_INIT${ORO_LANGUAGE_SUFFIX-}:$ORO_IMAGE_TAG
    command: operator
    env_file: .env
    environment:
      COMPOSE_PROJECT_NAME: $COMPOSE_PROJECT_NAME
      DOCKER_API_VERSION: v1.43
    restart: unless-stopped
    depends_on:
      "php-fpm-app":
        condition: service_healthy
    volumes:
      - /run/docker.sock:/run/docker.sock
      - cache:/var/www/oro/var/cache
      - multihost_operation_folder:$ORO_MULTIHOST_OPERATION_FOLDER
      - public_storage:/var/www/oro/public/media
      - private_storage:/var/www/oro/var/data

  backup:
    depends_on:
      <<: *default-depends_on_ee_services

  backup-test:
    depends_on:
      <<: *default-depends_on_ee_services

  restore:
    depends_on:
      <<: *default-depends_on_ee_services
    volumes:
      - cache:/var/www/oro/var/cache
      - public_storage:/var/www/oro/public/media
      - private_storage:/var/www/oro/var/data

  restore-test:
    depends_on:
      <<: *default-depends_on_ee_services
    volumes:
      - cache:/var/www/oro/var/cache
      - public_storage:/var/www/oro/public/media
      - private_storage:/var/www/oro/var/data

  install:
    depends_on:
      <<: *default-depends_on_ee_services
    volumes:
      - cache:/var/www/oro/var/cache
      - public_storage:/var/www/oro/public/media
      - private_storage:/var/www/oro/var/data

  install-test:
    depends_on:
      <<: *default-depends_on_ee_services
    volumes:
      - cache:/var/www/oro/var/cache
      - public_storage:/var/www/oro/public/media
      - private_storage:/var/www/oro/var/data

  functional:
    depends_on:
      <<: *default-depends_on_ee_services
    volumes:
      - cache:/var/www/oro/var/cache
      - public_storage:/var/www/oro/public/media
      - private_storage:/var/www/oro/var/data

  behat:
    depends_on:
      <<: *default-depends_on_ee_services
    volumes:
      - cache:/var/www/oro/var/cache
      - public_storage:/var/www/oro/public/media
      - private_storage:/var/www/oro/var/data

  search-engine:
    image: elasticsearch:${ORO_ES_VER}
    command: bin/elasticsearch -Eingest.geoip.downloader.enabled=false
    environment:
      discovery.type: "single-node"
      cluster.name: docker-cluster
      bootstrap.memory_lock: "true"
      network.host: 0.0.0.0
      path.repo: "/tmp"
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      xpack.security.enabled: false
      xpack.security.http.ssl.enabled: false
      xpack.security.transport.ssl.enabled: false
      cluster.routing.allocation.disk.threshold_enabled: false
    labels:
      com.symfony.server.service-prefix: ORO_SEARCH
    healthcheck:
      test: "curl -sfL 'http://127.0.0.1:9200/_cluster/health?pretty&wait_for_status=yellow&timeout=5s'"
      start_period: 120s
    restart: unless-stopped

  mq:
    image: oroinc/rabbitmq:${ORO_RMQ_VER}
    labels:
      com.symfony.server.service-prefix: ORO_MQ
    volumes:
      - ./rabbitmq/load_definitions.conf:/etc/rabbitmq/conf.d/load_definitions.conf
      - ./rabbitmq/rmq.definitions.json:/etc/rabbitmq/rmq.definitions.json
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 15s
      timeout: 30s
      start_period: 20s
    restart: unless-stopped

  session-storage:
    image: redis:${ORO_REDIS_VER}
    command: redis-server --bind 0.0.0.0
    labels:
      com.symfony.server.service-prefix: ORO_REDIS
    healthcheck:
      test: "[ $$(redis-cli ping) = 'PONG' ]"
      interval: 15s
      timeout: 30s
      start_period: 20s
    restart: unless-stopped

volumes:
  cache: {}
  multihost_operation_folder: {}
  public_storage: {}
  private_storage: {}
