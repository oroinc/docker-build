jobs:
  - script: >
      multibranchPipelineJob("customer") {
        branchSources {
          branchSource {
            source {
              gitlab {
                // Select the GitLab Server where you want the projects to be discovered from.
                serverName("default")
                // Specify the namespace which owns your projects.
                projectOwner("services")
                // Select the project on which you want to perform the Multibranch Pipeline Job.
                projectPath("services/${GITLAB_REPOSITORY_NAME}")
                // Checkout credentials is only needed for private projects.
                credentialsId("${GITLAB_USER_CREDENTIALS_ID}")
                traits {
                  // Discovers branches on the repository.
                  gitLabBranchDiscovery {
                    // Determines which branches are discovered.
                    strategyId(1)
                  }
                  // Discovers merge requests where the origin project is the same as the target project.
                  gitLabOriginDiscovery {
                    // Determines how merge requests are discovered: Merging the merge request with the current target branch revision Discover each merge request once with the discovered revision corresponding to the result of merging with the current revision of the target branch The current merge request revision Discover each merge request once with the discovered revision corresponding to the merge request head revision without merging Both the current merge request revision and the merge request merged with the current target branch revision Discover each merge request twice.
                    strategyId(1)
                  }
                  headWildcardFilter {
                      // Space-separated list of name patterns to consider.
                      includes("main master MR-*")
                      // Space-separated list of name patterns to ignore even if matched by the includes list.
                      excludes('')
                  }
                  gitlabSkipNotifications()
                }
                strategy {
                  allBranchesSame {
                    props {
                      // Allows you to control which branches should be built automatically and which could be only scheduled manually.
                      suppressAutomaticTriggering {
                        // Defines a regular expression of branch names which will be triggered automatically, for example (?!
                        triggeredBranchesRegex('^$')
                        // Determines events for which branches with matched names should not be triggered automatically.
                        strategy('NONE')
                      }
                    }
                  }
                }
              }
            }
          }
        }
        orphanedItemStrategy {
          discardOldItems {
            numToKeep(30)
          }
        }
      }
