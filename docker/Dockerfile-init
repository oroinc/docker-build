
ARG ORO_IMAGE_TAG
ARG ORO_IMAGE_FROM
ARG ORO_PUBLIC_PROJECT
ARG ORO_PRIVATE_PROJECT
ARG ORO_IMAGE_BUILDER=${ORO_PUBLIC_PROJECT}/builder
ARG ORO_BASELINE_VERSION

FROM ${ORO_PRIVATE_PROJECT}/aegypius/mkcert-for-nginx-proxy AS mkcert
FROM ${ORO_IMAGE_BUILDER}:${ORO_BASELINE_VERSION} AS composer
FROM ${ORO_IMAGE_FROM}:${ORO_IMAGE_TAG} AS data-tools

ARG ORO_DB_VERSION=15
ARG ORO_IMAGE_TAG
ARG ORO_IMAGE_FROM

LABEL com.oroinc.postgresql-version="${ORO_DB_VERSION}" \
    com.oroinc.orocloud.app="/var/www/oro" \
    com.oroinc.orocloud.image_type="init" \
    org.opencontainers.image.title="Application init image" \
    org.opencontainers.image.description="Application init image. Used for init DB and storage. Set parameters in application. Update application" \
    org.opencontainers.image.authors="ORO Inc." \
    org.opencontainers.image.vendor="ORO Inc." \
    org.opencontainers.image.url="https://github.com/laboro/dev/blob/master/docker-build/docker/README.md" \
    org.opencontainers.image.documentation="https://github.com/laboro/dev/blob/master/docker-build/docker/README.md" \
    org.opencontainers.image.base.name="${ORO_IMAGE_FROM}:${ORO_BASELINE_VERSION}"

RUN <<EOR
    set -ex
    gpasswd -a $ORO_USER_RUNTIME wheel
    SUDO_RPM_URL=$(curl -s https://yum.oracle.com/repo/OracleLinux/OL8/baseos/latest/x86_64/ | sed -n '/\/sudo/s/.*"\(getPackage.*\)".*/\1/p' | sort -V | tail -n 1)
    VIM_RPM_URL=$(curl -s https://yum.oracle.com/repo/OracleLinux/OL8/baseos/latest/x86_64/ | sed -n '/\/vim/s/.*"\(getPackage.*\)".*/\1/p' | sort -V | tail -n 1)
    rpm -Uhv "https://yum.oracle.com/repo/OracleLinux/OL8/baseos/latest/x86_64/${VIM_RPM_URL}" "https://yum.oracle.com/repo/OracleLinux/OL8/baseos/latest/x86_64/${SUDO_RPM_URL}" ||:
EOR

COPY --from=mkcert /usr/local/bin/mkcert /usr/local/bin/mkcert
COPY --from=composer /usr/local/bin/composer /usr/local/bin/composer
COPY docker-entrypoint-init.sh /usr/local/bin/docker-entrypoint.sh
COPY oro_sudo.conf /etc/sudoers.d/orovariables
ENTRYPOINT [ "docker-entrypoint.sh" ]

FROM data-tools AS backup
ARG ORO_DB_HOST
ARG ORO_DB_PORT
ARG ORO_DB_NAME
ARG ORO_DB_USER
ARG ORO_DB_PASSWORD
ARG ORO_DB_ROOT_USER
ARG ORO_DB_ROOT_PASSWORD
ARG ORO_MONGO_HOST
ARG ORO_MONGO_DATABASE
ARG ORO_MONGO_USER
ARG ORO_MONGO_PASSWORD
# use CACHEBUST for disable cache for only one RUN
ARG CACHEBUST=1
RUN echo $CACHEBUST && /usr/local/bin/docker-entrypoint.sh backup
VOLUME "/var/www/oro"

FROM data-tools AS backup-files
ARG ORO_DB_HOST
ARG ORO_DB_PORT
ARG ORO_DB_NAME
ARG ORO_DB_USER
ARG ORO_DB_PASSWORD
ARG ORO_DB_ROOT_USER
ARG ORO_DB_ROOT_PASSWORD
ARG ORO_BACKUP_DATA=/data
ENV ORO_BACKUP_DATA=$ORO_BACKUP_DATA
# use CACHEBUST for disable cache for only one RUN
ARG CACHEBUST=1
RUN --mount=type=bind,target=$ORO_BACKUP_DATA echo $CACHEBUST && /usr/local/bin/docker-entrypoint.sh backup
VOLUME "/var/www/oro"
